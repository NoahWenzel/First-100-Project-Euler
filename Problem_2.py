"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

# Create the sequence

x = 4000000 # Cap

fibIntCur = 1
fibIntPrev = 1

totalSum = 0

while(fibIntCur < x):
    # print("Cur")
    print(fibIntCur)
        # If current number is even then add it to the total sum
    if fibIntCur % 2 == 0:
        totalSum += fibIntCur

        # Increment to the next number in the sequence
    fibIntCur += fibIntPrev
    fibIntPrev = fibIntCur - fibIntPrev
    # print("prev")
    # print(fibIntPrev)

print("\nTotal Sum")
print(totalSum)




# The public tables currently show that this problem has been solved by 770574 members.